{"version":3,"sources":["panels/Home.js","panels/Intro.js","App.js","index.js"],"names":["Home","id","link","go","routes","isEmpty","value","setValue","snackbar","setIsEmpty","showSpinner","setSnackbar","promoBannerProps","getLink","share","clearResult","clearAds","left","className","style","paddingTop","type","placeholder","width","size","mode","data-to","paddingBottom","disabled","marginTop","vertical","onClose","bannerData","Intro","snackbarError","fetchedUser","userHasSeenIntro","centered","first_name","height","cursor","onClick","ROUTES","STORAGE_KEYS","STATUS","fetch","then","response","text","data","xmlDoc","console","log","DOMParser","parseFromString","getElementsByTagName","childNodes","nodeValue","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","setUserHasSeenIntro","Snackbar","url","result","error","useEffect","a","bridge","send","user","keys","Object","values","storageData","forEach","key","JSON","parse","HasSeenIntro","layout","before","backaroundColor","fill","duration","subscribe","detail","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","panel","viewIntro","stringify","hasSeenIntro","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.85ac05ab.chunk.js","sourcesContent":["import React from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\nimport { Cell, Separator, PanelHeaderButton, FixedLayout, PromoBanner } from '@vkontakte/vkui';\nimport Icon24Copy from '@vkontakte/icons/dist/24/copy';\nimport Snackbar from '@vkontakte/vkui/dist/components/Snackbar/Snackbar';\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner';\nimport SimpleCell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Icon28HelpOutline from '@vkontakte/icons/dist/28/help_outline';\nimport PropTypes from 'prop-types'\nimport Icon28CopyOutline from '@vkontakte/icons/dist/28/copy_outline';\nimport Icon28CancelOutline from '@vkontakte/icons/dist/28/cancel_outline';\nimport './Home.css';\nimport {\nPlaceholder\n} from \"@vkontakte/vkui\";\n\nconst Home = ({ id, go, routes, link, value, setValue, isEmpty, setIsEmpty, snackbar, setSnackbar, showSpinner, getLink, share, clearResult, promoBannerProps, clearAds}) => {\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n        if (event.target.value.length > 0) {\n            setIsEmpty(false)\n        }\n        else {\n            setIsEmpty(true)\n        }\n    };\n\n    const clear = () => {\n        setValue('')\n        setIsEmpty(true)\n    }\n    \n\n    return (\n    <Panel id={id}>\n        <PanelHeader left={<PanelHeaderButton className=\"btn\"><Icon28HelpOutline/></PanelHeaderButton>}>Склонятор</PanelHeader>\n        <Group>\n                <Div style={{paddingTop: 0}}>\n                    <Input type='text' placeholder='Введите слово' style={{ width: 300 }} size=\"xl\" mode=\"primary\" data-to=\"home\"  style={{paddingTop: 0, paddingBottom: 0}}/>\n                </Div>\n                <Div style={{paddingTop: 0}}>\n                    <Button className=\"btn\" size=\"xl\" mode=\"secondary\" data-to=\"home\" disabled={isEmpty || showSpinner}>\n                        Вперёд!\n                    </Button>\n                </Div>\n            {showSpinner &&\n            <Spinner size=\"medium\" style={{ marginTop: 20 }} />}\n            {link && !showSpinner &&\n            <Separator/>}\n            {link && !showSpinner &&\n            <Group>\n            </Group>}\n        </Group>\n        {promoBannerProps &&\n            <FixedLayout vertical=\"bottom\">\n                <PromoBanner onClose={() => clearAds()} bannerData={promoBannerProps} />\n            </FixedLayout>\n        }\n        {snackbar}\n\n    </Panel>\n    )\n};\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default Home;","import React, {Fragment} from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner';\nimport './Intro.css';\n\n\nconst Intro = ({ id, snackbarError, fetchedUser, userHasSeenIntro, go}) => {\n\treturn (\n\t\t<Panel id={id} centered={true}>\n\t\t\t<PanelHeader>\n\t\t\t\tСклонятор\n\t\t\t</PanelHeader>\n\t\t\t{(!userHasSeenIntro && fetchedUser) && \n\t\t\t<Fragment>\n\t\t\t\t<Group>\n\t\t\t\t\t<Div className='User'>\n\t\t\t\t\t\t<h2> Привет, {fetchedUser.first_name}! </h2>\n\t\t\t\t\t\t<h3> Этот сервис предназначен для склонения по падежам слов и словосочетаний.</h3>\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\t\t\t\t<FixedLayout vertical='bottom'>\n\t\t\t\t\t<Div>\n<Button style={{ height: 50, cursor: 'pointer' }} onClick={(go)} size=\"xl\" mode=\"commerce\">\n\t\n\tПродолжить\n\n</Button>\n\n\t\t\t\t\t</Div>\n\t\t\t\t</FixedLayout>\n\t\t\t</Fragment>\n\t\t}\n\t\t{snackbarError}\n\t</Panel>\n\t)\n};\n\n\nexport default Intro;\n\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport Snackbar from '@vkontakte/vkui/dist/components/Snackbar/Snackbar';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Intro from './panels/Intro';\nconst ROUTES = {\n\tHOME: 'home',\n\tINTRO: 'intro',\n\tFAQ: 'faq',\n}\nconst STORAGE_KEYS = {\n\tSTATUS: 'status',\n}\nfetch('https://ws3.morpher.ru/russian/declension?s=Александр').then(response => response.text()).then((data) => {\n            console.log(data);\n            var parser, xmlDoc;\n            parser = new DOMParser();\n            xmlDoc = parser.parseFromString(data,\"text/xml\");\n            console.log(xmlDoc.getElementsByTagName(\"Р\")[0].childNodes[0].nodeValue);\n        });\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState(ROUTES.INTRO);\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [userHasSeenIntro, setUserHasSeenIntro] = useState(false);\n\tconst [Snackbar, setSnackbar] = useState(false);\n\tconst [link, setLink] = useState();\n\tconst [value, setValue\t] = useState('');\n\tconst [isEmpty, setIsEmpty] = useState(true);\n\tconst [showSpinner, setShowSpinner] = useState(false);\n\tconst [currentResult, setCurrentResult] = useState({url: null, result: null, error: false});\n\tconst [history, setHistory] = useState([ROUTES.HOME]);\n\tconst [promoBannerProps, setPromoBannerProps] = useState(null);\n\tconst [firstVisit, setFirstVisit] = useState();\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconst storageData = await bridge.send('VKWebAppStorageGet',{\n\t\t\t\tkeys: Object.values(STORAGE_KEYS)\n\t\t\t});\n\t\t\tconsole.log(storageData);\n\t\t\tconst data = {};\n\t\t\tstorageData.keys.forEach( ({key, value}) => {\n\t\t\t\ttry {\n\t\t\t\t\tdata[key] = value ? JSON.parse(value) : {};\n\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\tcase STORAGE_KEYS.STATUS:\n\t\t\t\t\t\t\tif (data [key].HasSeenIntro) {\n\t\t\t\t\t\t\t\tsetActivePanel(ROUTES.HOME);\n\t\t\t\t\t\t\t\tsetUserHasSeenIntro(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch(error) {\n\t\t\t\t\tsetSnackbar(<Snackbar\n\t\t\t\t\t\tlayout='vertical'\n\t\t\t\t\t\tonClose={() => setSnackbar(null)}\n\t\t\t\t\t\tbefore={<Avatar size={24} style={{ backaroundColor: 'var(--dynamic-red)'}} \n\t\t\t\t\t\t><Icon24Error fill='#fff' width='14' height='14' /></Avatar>}\n\t\t\t\t\t\tduration={900}\n\t\t\t\t\t>\n\t\t\t\t\t\tПроблема с получением данных из Storage\n\t\t\t\t\t\n\t\t\t\t\t</Snackbar>)\n\t\t\t\t}\n\t\t\t})\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = panel => {\n\t\tsetActivePanel(panel);\n\t};\n\n\tconst viewIntro = async function () {\n\t\ttry {\n\t\t\tawait bridge.send('VKWebAppStorageSet', {\n\t\t\t\tkey: STORAGE_KEYS.STATUS,\n\t\t\t\tvalue: JSON.stringify({\n\t\t\t\t\thasSeenIntro: true\n\t\t\t\t})\n\t\t\t});\n\t\t\tgo (ROUTES.HOME)\n\t\t} catch (error) {\n\t\t\t\t\tsetSnackbar(<Snackbar\n\t\t\t\t\t\tlayout='vertical'\n\t\t\t\t\t\tonClose={() => setSnackbar(null)}\n\t\t\t\t\t\tbefore={<Avatar size={24} style={{ backaroundColor: 'var(--dynamic-red)'}} \n\t\t\t\t\t\t><Icon24Error fill='#fff' width='14' height='14' /></Avatar>}\n\t\t\t\t\t\tduration={900}\n\t\t\t\t\t>\n\t\t\t\t\t\tПроблема с отправкой данных в Storage\n\t\t\t\t\t\n\t\t\t\t\t</Snackbar>)\t\t\t\n\t\t}\n\t}\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id={ROUTES.HOME} fetchedUser={fetchedUser} go={go} snackbarError={Snackbar}/>\n\t\t\t<Intro id={ROUTES.INTRO} fetchedUser={fetchedUser} go={viewIntro} snackbarError={Snackbar} userHasSeenIntro={userHasSeenIntro} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}