{"version":3,"sources":["panels/Home.js","panels/Intro.js","App.js","index.js"],"names":["Home","id","fetchedUser","go","title","Intro","snackbarError","userHasSeenIntro","centered","className","photo_200","src","first_name","vertical","mode","size","onClick","ROUTES","STORAGE_KEYS","STATUS","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","setUserHasSeenIntro","Snackbar","setSnackbar","useEffect","a","bridge","send","user","keys","Object","values","storageData","console","log","data","forEach","key","value","JSON","parse","HasSeenIntro","error","layout","onClose","before","style","backaroundColor","fill","width","height","duration","subscribe","detail","type","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","panel","viewIntro","stringify","hasSeenIntro","ReactDOM","render","getElementById"],"mappings":"+pBAqCeA,G,cArBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAQC,GAAX,EAAOC,GAAP,EAAWD,aAAX,OACZ,kBAAC,IAAD,CAAOD,GAAIA,GACV,kBAAC,IAAD,+DACCC,GACD,kBAAC,IAAD,CAAOE,MAAM,wC,mECyBAC,G,OA9BD,SAAC,GAA6D,IAA3DJ,EAA0D,EAA1DA,GAAIK,EAAsD,EAAtDA,cAAeJ,EAAuC,EAAvCA,YAAaK,EAA0B,EAA1BA,iBAAkBJ,EAAQ,EAARA,GAClE,OACC,kBAAC,IAAD,CAAOF,GAAIA,EAAIO,UAAU,GACxB,kBAAC,IAAD,gEAGGD,GAAoBL,GACvB,kBAAC,WAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKO,UAAU,QACbP,EAAYQ,WAAa,kBAAC,IAAD,CAAQC,IAAKT,EAAYQ,YACnD,sEAAcR,EAAYU,WAA1B,MACA,iaAGF,kBAAC,IAAD,CAAaC,SAAS,UACrB,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQC,KAAK,WAAWC,KAAK,KAAKC,QAASb,GAA3C,mEAOHG,KC3BGW,EACC,OADDA,EAEE,QAEFC,EAAe,CACpBC,OAAQ,UA6FMC,EA1FH,WAAO,IAAD,EACqBC,mBAASJ,GAD9B,mBACVK,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVnB,EAFU,KAEGsB,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAeN,KAAK,WAHxC,mBAGVU,EAHU,KAGFC,EAHE,OAI+BL,oBAAS,GAJxC,mBAIVd,EAJU,KAIQoB,EAJR,OAKeN,oBAAS,GALxB,mBAKVO,EALU,KAKAC,EALA,KAQjBC,qBAAU,WAAM,4CAQf,gCAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,cACOC,EADP,gBAE2BF,IAAOC,KAAK,qBAAqB,CAC1DE,KAAMC,OAAOC,OAAOnB,KAHtB,OAEOoB,EAFP,OAKCC,QAAQC,IAAIF,GACNG,EAAO,GACbH,EAAYH,KAAKO,SAAS,YAAmB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,MAChC,IAEC,OADAH,EAAKE,GAAOC,EAAQC,KAAKC,MAAMF,GAAS,GAChCD,GACP,KAAKzB,EAAaC,OACbsB,EAAME,GAAKI,eACdxB,EAAeN,GACfU,GAAoB,KAMtB,MAAMqB,GACPnB,EAAY,kBAACD,EAAD,CACXqB,OAAO,WACPC,QAAS,kBAAMrB,EAAY,OAC3BsB,OAAQ,kBAAC,IAAD,CAAQpC,KAAM,GAAIqC,MAAO,CAAEC,gBAAiB,uBACnD,kBAAC,IAAD,CAAaC,KAAK,OAAOC,MAAM,KAAKC,OAAO,QAC5CC,SAAU,KALC,uLAYdjC,EAAQU,GACRR,EAAU,MAlCX,6CARe,sBACfM,IAAO0B,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMnB,EAAY,EAAZA,KACnC,GAAa,yBAATmB,EAAiC,CACpC,IAAMC,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBjB,MAAQH,EAAKuB,OAASvB,EAAKuB,OAAS,eACpDF,SAASG,KAAKC,WAAWC,aAAaN,OALzB,mCA4CfO,KACE,IAEH,IAAMjE,EAAK,SAAAkE,GACV9C,EAAe8C,IAGVC,EAAS,uCAAG,sBAAAvC,EAAA,+EAEVC,IAAOC,KAAK,qBAAsB,CACvCU,IAAKzB,EAAaC,OAClByB,MAAOC,KAAK0B,UAAU,CACrBC,cAAc,MALA,OAQhBrE,EAAIc,GARY,+CAUdY,EAAY,kBAACD,EAAD,CACXqB,OAAO,WACPC,QAAS,kBAAMrB,EAAY,OAC3BsB,OAAQ,kBAAC,IAAD,CAAQpC,KAAM,GAAIqC,MAAO,CAAEC,gBAAiB,uBACnD,kBAAC,IAAD,CAAaC,KAAK,OAAOC,MAAM,KAAKC,OAAO,QAC5CC,SAAU,KALC,uKAVE,wDAAH,qDAuBf,OACC,kBAAC,IAAD,CAAMnC,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAMxB,GAAIgB,EAAaf,YAAaA,EAAaC,GAAIA,EAAIG,cAAesB,IACxE,kBAAC,EAAD,CAAO3B,GAAIgB,EAAcf,YAAaA,EAAaC,GAAImE,EAAWhE,cAAesB,EAAUrB,iBAAkBA,MCjGhHyB,IAAOC,KAAK,gBAEZwC,IAASC,OAAO,kBAAC,EAAD,MAASZ,SAASa,eAAe,W","file":"static/js/main.430778e7.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Snackbar from '@vkontakte/vkui/dist/components/Snackbar/Snackbar';\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\n\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Склонятор</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t</Group>}\t\t\n</Panel>\n);\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, {Fragment} from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\nimport './Intro.css';\n\n\nconst Intro = ({ id, snackbarError, fetchedUser, userHasSeenIntro, go}) => {\n\treturn (\n\t\t<Panel id={id} centered={true}>\n\t\t\t<PanelHeader>\n\t\t\t\tСклонятор\n\t\t\t</PanelHeader>\n\t\t\t{(!userHasSeenIntro && fetchedUser) && \n\t\t\t<Fragment>\n\t\t\t\t<Group>\n\t\t\t\t\t<Div className='User'>\n\t\t\t\t\t\t{fetchedUser.photo_200 && <Avatar src={fetchedUser.photo_200} />}\n\t\t\t\t\t\t<h2> Привет, {fetchedUser.first_name}! </h2>\n\t\t\t\t\t\t<h3> Этот сервис предназначен для склонения по падежам слов и словосочетаний.</h3>\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\t\t\t\t<FixedLayout vertical='bottom'>\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<Button mode='commerce' size='xl' onClick={go}>\n\t\t\t\t\t\t\tПродолжить\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Div>\n\t\t\t\t</FixedLayout>\n\t\t\t</Fragment>\n\t\t}\n\t\t{snackbarError}\n\t</Panel>\n\t)\n};\n\n\nexport default Intro;\n\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport Snackbar from '@vkontakte/vkui/dist/components/Snackbar/Snackbar';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Intro from './panels/Intro';\nconst ROUTES = {\n\tHOME: 'home',\n\tINTRO: 'intro'\n}\nconst STORAGE_KEYS = {\n\tSTATUS: 'status',\n}\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState(ROUTES.INTRO);\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [userHasSeenIntro, setUserHasSeenIntro] = useState(false);\n\tconst [Snackbar, setSnackbar] = useState(false);\n\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconst storageData = await bridge.send('VKWebAppStorageGet',{\n\t\t\t\tkeys: Object.values(STORAGE_KEYS)\n\t\t\t});\n\t\t\tconsole.log(storageData);\n\t\t\tconst data = {};\n\t\t\tstorageData.keys.forEach( ({key, value}) => {\n\t\t\t\ttry {\n\t\t\t\t\tdata[key] = value ? JSON.parse(value) : {};\n\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\tcase STORAGE_KEYS.STATUS:\n\t\t\t\t\t\t\tif (data [key].HasSeenIntro) {\n\t\t\t\t\t\t\t\tsetActivePanel(ROUTES.HOME);\n\t\t\t\t\t\t\t\tsetUserHasSeenIntro(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch(error) {\n\t\t\t\t\tsetSnackbar(<Snackbar\n\t\t\t\t\t\tlayout='vertical'\n\t\t\t\t\t\tonClose={() => setSnackbar(null)}\n\t\t\t\t\t\tbefore={<Avatar size={24} style={{ backaroundColor: 'var(--dynamic-red)'}} \n\t\t\t\t\t\t><Icon24Error fill='#fff' width='14' height='14' /></Avatar>}\n\t\t\t\t\t\tduration={900}\n\t\t\t\t\t>\n\t\t\t\t\t\tПроблема с получением данных из Storage\n\t\t\t\t\t\n\t\t\t\t\t</Snackbar>)\n\t\t\t\t}\n\t\t\t})\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = panel => {\n\t\tsetActivePanel(panel);\n\t};\n\n\tconst viewIntro = async function () {\n\t\ttry {\n\t\t\tawait bridge.send('VKWebAppStorageSet', {\n\t\t\t\tkey: STORAGE_KEYS.STATUS,\n\t\t\t\tvalue: JSON.stringify({\n\t\t\t\t\thasSeenIntro: true\n\t\t\t\t})\n\t\t\t});\n\t\t\tgo (ROUTES.HOME)\n\t\t} catch (error) {\n\t\t\t\t\tsetSnackbar(<Snackbar\n\t\t\t\t\t\tlayout='vertical'\n\t\t\t\t\t\tonClose={() => setSnackbar(null)}\n\t\t\t\t\t\tbefore={<Avatar size={24} style={{ backaroundColor: 'var(--dynamic-red)'}} \n\t\t\t\t\t\t><Icon24Error fill='#fff' width='14' height='14' /></Avatar>}\n\t\t\t\t\t\tduration={900}\n\t\t\t\t\t>\n\t\t\t\t\t\tПроблема с отправкой данных в Storage\n\t\t\t\t\t\n\t\t\t\t\t</Snackbar>)\t\t\t\n\t\t}\n\t}\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id={ROUTES.HOME} fetchedUser={fetchedUser} go={go} snackbarError={Snackbar}/>\n\t\t\t<Intro id={ROUTES.INTRO} fetchedUser={fetchedUser} go={viewIntro} snackbarError={Snackbar} userHasSeenIntro={userHasSeenIntro} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}